plugins {
  id("org.jetbrains.kotlin.jvm") version "1.4.32"
  id("org.jetbrains.kotlin.kapt") version "1.4.32"
  id("com.github.johnrengelman.shadow") version "7.0.0"
  id("io.micronaut.application") version "1.5.3"
  id("org.jetbrains.kotlin.plugin.allopen") version "1.4.32"
  id("org.jetbrains.kotlin.plugin.jpa") version "1.4.32"
  id("com.google.protobuf") version("0.8.17")
}

version = "0.1"
group = "br.com.zupacademy.lincon"

repositories {
  mavenCentral()
}

micronaut {
  runtime("netty")
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("br.com.zupacademy.lincon.*")
  }
}

dependencies {
  kapt("io.micronaut.data:micronaut-data-processor")
  kapt("io.micronaut.openapi:micronaut-openapi")
  implementation("io.micronaut:micronaut-http-client")
  implementation("io.micronaut:micronaut-runtime")
  implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
  implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
  implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
  implementation("io.micronaut.sql:micronaut-jdbc-hikari")
  implementation("io.swagger.core.v3:swagger-annotations")
  implementation("javax.annotation:javax.annotation-api")
  implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
  implementation("io.micronaut:micronaut-validation")

  implementation("io.micronaut.grpc:micronaut-grpc-client-runtime")
  implementation("br.com.caelum.stella:caelum-stella-core:2.1.2")

  runtimeOnly("ch.qos.logback:logback-classic")
  runtimeOnly("com.h2database:h2")
  runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

}

application {
  mainClass.set("br.com.zupacademy.lincon.ApplicationKt")
}
java {
  sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
  compileKotlin {
    kotlinOptions {
      jvmTarget = "11"
    }
  }
  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "11"
    }
  }
}

sourceSets {
  main {
    java {
      srcDirs("build/generated/source/proto/main/grpc")
      srcDirs("build/generated/source/proto/main/java")
    }
  }
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:3.17.2" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.38.0" }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}
